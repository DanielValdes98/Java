package com.latam.alura.tienda.dao;

import javax.persistence.EntityManager;

import com.latam.alura.tienda.modelo.Pedido;
import com.latam.alura.tienda.vo.RelatorioDeVenta;

import java.math.BigDecimal;
import java.util.List;

public class PedidoDao {
	
	private EntityManager em;
	
	public PedidoDao(EntityManager em) {
		this.em = em;
	}

	public void guardar(Pedido pedido) {
		this.em.persist(pedido);
	}
	
	public Pedido consultaPorId(Long id) {
		return em.find(Pedido.class, id);
	}
	
    public void actualizar(Pedido pedido) {
        this.em.merge(pedido);
    }

    public void remover(Pedido pedido) {
    	pedido=this.em.merge(pedido);
        this.em.remove(pedido);
    }
    
    public Pedido consultarPorId(Long id) {
    	return em.find(Pedido.class, id);
    }
    
    // Metodo para consultar todos los elementos de la tabla pedido:
    public List<Pedido> consultarTodos(){
    	String jqpl = "SELECT P FROM pedido AS P";
    	return em.createQuery(jqpl,Pedido.class).getResultList();
    }
    
    public BigDecimal valorTotalVendido() {
    	String jpql = "SELECT SUM(P.valorTotal) FROM Pedido P";
    	return em.createQuery(jpql, BigDecimal.class).getSingleResult();
    }
    
    
    // Retorna un Object[], porque trae informacion con distintos tipos de datos:
    public List<Object[]> relatorioDeVentas(){
    	String jpql = "SELECT producto.nombre,"
    				+ "SUM(item.cantidad),"
    				+ "MAX(pedido.fecha) "
    				+ "FROM Pedido pedido "
    				+ "JOIN pedido.items item "
    				+ "JOIN item.producto producto "
    				+ "GROUP BY producto.nombre "
    				+ "ORDER BY item.cantidad DESC";
    	return em.createQuery(jpql, Object[].class).getResultList();
    }
    
    // Ahora se hace lo mismo pero creando una clase para retornar:
    public List<RelatorioDeVenta> relatorioDeVentasVO(){
    	String jpql = "SELECT new com.latam.alura.tienda.vo.RelatorioDeVenta(producto.nombre,"
    				+ "SUM(item.cantidad),"
    				+ "MAX(pedido.fecha)) "
    				+ "FROM Pedido pedido "
    				+ "JOIN pedido.items item "
    				+ "JOIN item.producto producto "
    				+ "GROUP BY producto.nombre "
    				+ "ORDER BY item.cantidad DESC";
    	return em.createQuery(jpql, RelatorioDeVenta.class).getResultList();
    }
   
      
}



