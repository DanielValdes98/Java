import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import com.mysql.cj.xdevapi.PreparableStatement;
import com.mysql.cj.xdevapi.Result;

public class App extends JFrame {

	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JLabel lblNewLabel_1;
	private JLabel lblNewLabel_2;
	private JLabel lblNewLabel_3;
	private JLabel lblNewLabel_4;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					App frame = new App();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	
	Conexion db = new Conexion();
	Connection cin =  db.getConnection();
	String nombre;
	String edad;
	String fecha;
	String id;
	PreparedStatement ps;
	
	private JLabel lblNewLabel_5;
	private JTextField textField_3;
	private JButton btnNewButton_2;
	private JButton btnNewButton_3;

	
	public App() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 514, 403);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBounds(10, 11, 478, 342);
		contentPane.add(panel);
		panel.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("APP CRUD MYSQL");
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(149, 11, 166, 45);
		panel.add(lblNewLabel);
		
		textField = new JTextField();
		textField.setBounds(201, 107, 235, 20);
		panel.add(textField);
		textField.setColumns(10);
		
		textField_1 = new JTextField();
		textField_1.setBounds(201, 138, 235, 20);
		panel.add(textField_1);
		textField_1.setColumns(10);
		
		textField_2 = new JTextField();
		textField_2.setBounds(201, 169, 106, 20);
		panel.add(textField_2);
		textField_2.setColumns(10);
		
		lblNewLabel_1 = new JLabel("Nombre");
		lblNewLabel_1.setBounds(112, 110, 46, 14);
		panel.add(lblNewLabel_1);
		
		lblNewLabel_2 = new JLabel("Edad");
		lblNewLabel_2.setBounds(112, 141, 46, 14);
		panel.add(lblNewLabel_2);
		
		lblNewLabel_3 = new JLabel("Fecha");
		lblNewLabel_3.setBounds(112, 172, 46, 14);
		panel.add(lblNewLabel_3);
		
		lblNewLabel_4 = new JLabel("Usuarios");
		lblNewLabel_4.setBounds(209, 67, 46, 14);
		panel.add(lblNewLabel_4);
		
		JButton btnNewButton = new JButton("INSERTAR");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				nombre=textField.getText();
				edad=textField_1.getText();
				fecha=textField_2.getText();
				
				String insertar = "INSERT INTO `prueba`.`usuarios` (`Nombre`, `Edad`, `Fecha`) VALUES (?, ?, ?)";

				try {
					ps = cin.prepareCall(insertar);
					System.out.println("Insertando usuario");
					ps.setString(1,nombre);
					ps.setString(2,edad);
					ps.setString(3,fecha);
					
					int registro = ((PreparedStatement) ps).executeUpdate();
					if(registro > 0) {
						JOptionPane.showMessageDialog(null, "Registro guardado","bien",JOptionPane.QUESTION_MESSAGE, null);
						textField.setText("");
						textField_1.setText("");
						textField_2.setText("");
					} else {
						JOptionPane.showMessageDialog(null, "Error al guardar registro","error",JOptionPane.ERROR_MESSAGE, null);
					}
				} catch (SQLException e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
				
			}
		});
		btnNewButton.setBounds(23, 262, 89, 23);
		panel.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("BUSCAR");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				id = textField_3.getText();
				
				String buscar = "SELECT * FROM prueba.usuarios WHERE id=?";
				
				try {
					ps = cin.prepareCall(buscar);
					System.out.println("Buscando...");
					ps.setString(1, id);
					
					ResultSet registro = ps.executeQuery(); // Busca una coincidencia
					
					if(registro.next()) { // Devuelve un valor een caso de que sea true
						textField.setText(registro.getString("Nombre"));
						textField_1.setText(registro.getString("Edad"));
						textField_2.setText(registro.getString("Fecha"));
						textField_3.setText(registro.getString("Id"));
						
						JOptionPane.showMessageDialog(null, "Registro encontrado","bien",JOptionPane.QUESTION_MESSAGE, null);
					} else {
						JOptionPane.showMessageDialog(null, "Error al buscar registro","error",JOptionPane.ERROR_MESSAGE, null);
					}
				} catch (SQLException e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
			}
		});
		btnNewButton_1.setBounds(129, 262, 89, 23);
		panel.add(btnNewButton_1);
		
		lblNewLabel_5 = new JLabel("ID");
		lblNewLabel_5.setBounds(112, 203, 46, 14);
		panel.add(lblNewLabel_5);
		
		textField_3 = new JTextField();
		textField_3.setBounds(201, 200, 86, 20);
		panel.add(textField_3);
		textField_3.setColumns(10);
		
		btnNewButton_2 = new JButton("ELIMINAR");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String eliminar = "DELETE FROM `prueba`.`usuarios` WHERE (`Id` = ?)";
				
				try {
					ps = cin.prepareCall(eliminar);
					System.out.println("Eliminando...");
					ps.setString(1, id);
					
					int registro = ps.executeUpdate(); // Busca una coincidencia
					
					if(registro>0) { // Devuelve un valor een caso de que sea true
						textField.setText("");
						textField_1.setText("");
						textField_2.setText("");
						textField_3.setText("");
						
						JOptionPane.showMessageDialog(null, "Registro eliminado","bien",JOptionPane.QUESTION_MESSAGE, null);
					} else {
						JOptionPane.showMessageDialog(null, "Error al eliminar registro","error",JOptionPane.ERROR_MESSAGE, null);
					}
				} catch (SQLException e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
			}
		});
		btnNewButton_2.setBounds(237, 262, 89, 23);
		panel.add(btnNewButton_2);
		
		btnNewButton_3 = new JButton("ACTUALIZAR");
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String actualizar = "UPDATE `prueba`.`usuarios` SET `Nombre` = ?, `Edad` = ?, `Fecha` = ? WHERE (`Id` = ?)";
				
				nombre=textField.getText();
				edad=textField_1.getText();
				fecha=textField_2.getText();
				id = textField_3.getText();
				
				try {
					ps = cin.prepareCall(actualizar);
					System.out.println("Actualizando...");
					ps.setString(1, nombre);
					ps.setString(2, edad);
					ps.setString(3, fecha);
					ps.setString(4, id);
				} catch (SQLException e2) {
					// TODO: handle exception
				}
				
				
			}
		});
		btnNewButton_3.setBounds(347, 262, 106, 23);
		panel.add(btnNewButton_3);
	}
}
